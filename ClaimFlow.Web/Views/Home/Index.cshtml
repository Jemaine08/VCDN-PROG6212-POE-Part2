// Reference: Microsoft Learn (2024) Razor Pages and Views in ASP.NET Core
// Available at: https://learn.microsoft.com/en-us/aspnet/core/mvc/views/overview
// Helped guide the creation of Razor views for displaying claims and status updates in `Create.cshtml` and `MyClaims.cshtml`.

@model ClaimFlow.Web.Models.ViewModels.HomeVm
@{
    Layout = "_Layout";

    string Badge(ClaimFlow.Web.Models.ClaimStatus s) => s switch
    {
        ClaimFlow.Web.Models.ClaimStatus.Submitted => "secondary",
        ClaimFlow.Web.Models.ClaimStatus.Verified => "info",
        ClaimFlow.Web.Models.ClaimStatus.Approved => "success",
        _ => "danger"
    };
}

<div class="px-3 py-5 mb-4 bg-body-tertiary rounded-3 border">
    <div class="container py-5">
        <h1 class="display-5 fw-bold">ClaimFlow</h1>
        <p class="col-md-8 fs-5">
            Lightweight claims workflow for Lecturers → Coordinator → Academic Manager.
            No database, no login — just clean MVC, JSON storage, and encrypted uploads.
        </p>
        <div class="d-flex flex-wrap gap-2">
            <a href="/Claims/Create" class="btn btn-primary btn-lg">Submit a Claim</a>
            <a href="/Claims/My" class="btn btn-outline-primary btn-lg">My Claims</a>
            <a href="/Coordinator" class="btn btn-outline-dark btn-lg">Coordinator</a>
            <a href="/Manager" class="btn btn-dark btn-lg">Manager</a>
        </div>
    </div>
</div>

<div class="container">
    <div class="row g-3 mb-4">
        <div class="col-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Total</div>
                    <div class="h3 mb-0">@Model.Total</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Submitted</div>
                    <div class="h3 mb-0">@Model.Submitted</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Verified</div>
                    <div class="h3 mb-0">@Model.Verified</div>
                </div>
            </div>
        </div>
        <div class="col-6 col-md-3">
            <div class="card shadow-sm">
                <div class="card-body">
                    <div class="text-muted text-uppercase small">Approved</div>
                    <div class="h3 mb-0">@Model.Approved</div>
                </div>
            </div>
        </div>
    </div>

    <div class="card shadow-sm">
        <div class="card-body">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <h5 class="mb-0">Recent Claims</h5>
                <a class="btn btn-sm btn-outline-secondary" href="/Claims/My">View all</a>
            </div>
            @if (!Model.Recent.Any())
            {
                <div class="alert alert-info mb-0">No claims yet — be the first to submit.</div>
            }
            else
            {
                <div class="table-responsive">
                    <table class="table table-hover align-middle mb-0">
                        <thead>
                            <tr>
                                <th>Date</th>
                                <th>Lecturer</th>
                                <th class="text-end">Total</th>
                                <th>Status</th>
                                <th>Notes</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var c in Model.Recent)
                            {
                                <tr>
                                    <td>@c.CreatedAt.ToLocalTime().ToString("yyyy-MM-dd HH:mm")</td>
                                    <td>@c.LecturerName</td>
                                    <td class="text-end"><strong>@("R " + c.Total.ToString("0.00"))</strong></td>
                                    <td><span class="badge text-bg-@Badge(c.Status)">@c.Status</span></td>
                                    <td class="text-truncate" style="max-width:420px">@c.Notes</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // (optional) future: lightweight client-side enhancements here
    </script>
}
